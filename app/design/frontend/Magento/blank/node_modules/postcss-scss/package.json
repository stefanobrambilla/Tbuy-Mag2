{
  "name": "postcss-scss",
  "version": "0.3.1",
  "description": "SCSS parser for PostCSS",
  "keywords": [
    "css",
    "postcss",
    "postcss-syntax",
    "parser",
    "scss",
    "sass"
  ],
  "author": {
    "name": "Andrey Sitnik",
    "email": "andrey@sitnik.ru"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/postcss/postcss-scss.git"
  },
  "dependencies": {
    "postcss": "^5.2.4"
  },
  "devDependencies": {
    "babel-plugin-precompile-charcodes": "1.0.0",
    "babel-plugin-add-module-exports": "0.2.1",
    "eslint-config-postcss": "2.0.2",
    "postcss-parser-tests": "5.0.10",
    "babel-preset-es2015": "6.16.0",
    "gulp-json-editor": "2.2.1",
    "gulp-sourcemaps": "1.6.0",
    "babel-eslint": "7.0.0",
    "run-sequence": "1.2.2",
    "gulp-changed": "1.3.2",
    "gulp-eslint": "3.0.1",
    "lint-staged": "3.0.3",
    "gulp-babel": "6.1.2",
    "pre-commit": "1.1.3",
    "babel-core": "6.17.0",
    "gulp-ava": "0.14.1",
    "eslint": "3.7.0",
    "gulp": "3.9.1",
    "ava": "0.16.0",
    "del": "2.2.2"
  },
  "scripts": {
    "lint-staged": "lint-staged",
    "test": "gulp"
  },
  "main": "lib/scss-syntax",
  "lint-staged": {
    "test/*.js": "eslint",
    "lib/*.es6": "eslint"
  },
  "pre-commit": [
    "lint-staged"
  ],
  "readme": "# PostCSS SCSS Syntax [![Build Status][ci-img]][ci]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n     title=\"Philosopher’s stone, logo of PostCSS\"\n     src=\"http://postcss.github.io/postcss/logo.svg\">\n\nA [SCSS] parser for [PostCSS].\n\n**This module does not compile SCSS.** It simply parses mixins as custom\nat-rules & variables as properties, so that PostCSS plugins can then transform\nSCSS source code alongside CSS.\n\n[PostCSS]: https://github.com/postcss/postcss\n[ci-img]:  https://img.shields.io/travis/postcss/postcss-scss.svg\n[SCSS]:    http://sass-lang.com/\n[ci]:      https://travis-ci.org/postcss/postcss-scss\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Usage\n\n### SCSS Transformations\n\nThe main use case of this plugin is to apply PostCSS transformations directly\nto SCSS source code. For example, if you ship a theme written in SCSS and need\n[Autoprefixer] to add the appropriate vendor prefixes to it; or you need to\nlint SCSS with a plugin such as [Stylelint].\n\n```js\nvar syntax = require('postcss-scss');\npostcss(plugins).process(scss, { syntax: syntax }).then(function (result) {\n    result.content // SCSS with transformations\n});\n```\n\n[Autoprefixer]: https://github.com/postcss/autoprefixer\n[Stylelint]:    http://stylelint.io/\n\n### Inline Comments for PostCSS\n\nThis module also enables parsing of single-line comments in CSS source code.\n\n```scss\n:root {\n    // Main theme color\n    --color: red;\n}\n```\n\nNote that you don’t need a special stringifier to handle the output; the default\none will automatically convert single line comments into block comments.\n\n```js\nvar syntax = require('postcss-scss');\npostcss(plugins).process(scss, { parser: syntax }).then(function (result) {\n    result.css // CSS with normal comments\n});\n```\n\nIf you want Sass behaviour with removing inline comments, you can use\n[postcss-strip-inline-comments] plugin.\n\n[postcss-strip-inline-comments]: https://github.com/mummybot/postcss-strip-inline-comments\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/postcss/postcss-scss/issues"
  },
  "homepage": "https://github.com/postcss/postcss-scss#readme",
  "_id": "postcss-scss@0.3.1",
  "_shasum": "65c610d8e2a7ee0e62b1835b71b8870734816e4b",
  "_resolved": "https://registry.npmjs.org/postcss-scss/-/postcss-scss-0.3.1.tgz",
  "_from": "https://registry.npmjs.org/postcss-scss/-/postcss-scss-0.3.1.tgz"
}
