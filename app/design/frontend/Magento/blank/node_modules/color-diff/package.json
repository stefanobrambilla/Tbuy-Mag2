{
  "name": "color-diff",
  "version": "0.1.7",
  "description": "Implemets the CIEDE2000 color difference algorithm, conversion between RGB and LAB color and mapping all colors in palette X to the closest or most different color in palette Y based on the CIEDE2000 difference.",
  "main": "lib/index.js",
  "scripts": {
    "test": "istanbul cover _mocha && ((cat coverage/lcov.info | coveralls) || exit 0)"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/markusn/color-diff.git"
  },
  "keywords": [
    "color",
    "diff",
    "color-diff",
    "pallette",
    "closest",
    "convert",
    "conversion",
    "CIEDE2000"
  ],
  "author": {
    "name": "markusn kael"
  },
  "license": "BSD",
  "readmeFilename": "README.md",
  "gitHead": "61269601ac72e65afd111565bfa68a2d13092de0",
  "bugs": {
    "url": "https://github.com/markusn/color-diff/issues"
  },
  "devDependencies": {
    "assert": "~0.4.9",
    "mocha": "~1.12.0",
    "coveralls": "~2.1.0",
    "istanbul": "~0.1.40"
  },
  "readme": "# Color-diff\n[![Build Status](https://travis-ci.org/markusn/color-diff.png)](https://travis-ci.org/markusn/color-diff)\n[![Coverage Status](https://coveralls.io/repos/markusn/color-diff/badge.png?branch=master)](https://coveralls.io/r/markusn/color-diff?branch=master)\n\nImplemets the CIEDE2000 color difference algorithm, conversion between RGB and LAB color and mapping all colors in palette X to the closest color in palette Y based on the CIEDE2000 difference.\n\n## Installation\n\n```bash\nnpm install color-diff --save\n```\n\n## Tests\n\nAre located in the `test/` folder and are run by:\n\n\tnpm test\n\n\n## Usage\n\n```js\nvar diff = require('color-diff');\n```\n\n### diff.closest(color, palette)\n\nReturns the closest color.\n\n```js\nvar color = { R: 255, G: 1, B: 30 };\n// red, green, blue\nvar palette = [ {R: 255, G: 0, B: 0 }, {R: 0, G: 255, B: 0 }, {R: 0, G: 0, B: 255} ];\n\ndiff.closest(color, palette); // {R: 255, G: 0, B: 0 }, red\n```\n\nThe result above is obvious, but `diff.closest` could deal with more complicated cases.\n\n### diff.furthest(color, palette)\n\nReturns the most different color.\n\n```js\nvar color = { R: 255, G: 255, B: 255 };\n// black, white\nvar palette = [ {R: 0, G: 0, B: 0 }, {R: 255, G: 255, B: 255 } ];\n\ndiff.furthest(color, palette); // {R: 0, G: 0, B: 0 }, black\n```\n\nThe result above is obvious, but `diff.furthest` could deal with more complicated cases.\n\n\n#### color\n`Object`\n\n`color` is an object containing 3 properties: 'R', 'G', 'B', such as:\n\n```js\n{ R: 255, G: 1, B: 0 }\n```\n\n#### palette\n\n`Array.<Object>`\n\nColor palette array which contains many `color`-like objects.\n\n\n## Author\nMarkus Ekholm\n\n## License\n3-clause BSD. For details see `COPYING`.\n",
  "homepage": "https://github.com/markusn/color-diff#readme",
  "_id": "color-diff@0.1.7",
  "_shasum": "6db78cd9482a8e459d40821eaf4b503283dcb8e2",
  "_resolved": "https://registry.npmjs.org/color-diff/-/color-diff-0.1.7.tgz",
  "_from": "https://registry.npmjs.org/color-diff/-/color-diff-0.1.7.tgz"
}
